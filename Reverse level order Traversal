import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

class Node{
    int data;
    Node left,right=null;
    


Node(int item){
    data=item;
    left=right=null;
}
}
class BinaryTree {
    Node root ;
    void reverse(Node node){
        Stack<Node>s=new Stack();
        Queue<Node>q=new LinkedList();
        q.add(node);
        while(!q.isEmpty()){
            node = q.peek();
            q.remove();
            s.push(node);
            
            if(node.right!=null)
            q.add(node.right);
             if(node.left!=null)
            q.add(node.left);
        }
            
            while(!s.isEmpty()){
                node=s.peek();
                System.out.println(node.data);
                s.pop();
            }
    }
    
    public static void main(String args[]) 
    {
        BinaryTree tree = new BinaryTree();
   
        
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        tree.root.right.left = new Node(6);
        tree.root.right.right = new Node(7);
   
        System.out.println("Level Order traversal of binary tree is :");
        tree.reverse(tree.root);
   
    }
}
            
            
