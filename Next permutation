class Solution{
    static List<Integer> nextPermutation(int N, int arr[])
    {
    int i=N-2;
       while(i>=0)
       {
           if(arr[i]<arr[i+1])
           {
               break;
           }
           i--;
       }
       
       if(i>=0)
       {
         int j=N-1;  
           while(j>=0)
           {
               if(arr[j]>arr[i])
               {
                   break;
               }
               j--;
           }
           swap(arr,i,j);
       }
       //Reverse the remaining array
       reverse(arr,i+1);
       ArrayList<Integer> list=new ArrayList<Integer>();
       for(int k=0;k<N;k++)
       {
           list.add(arr[k]);
       }
       return list;
    }
    public static void reverse(int[] arr,int i) {
         int j=arr.length-1;
         while(i<j)
         {
             swap(arr,i,j);
             i++;
             j--;
         }
         
     }
    public static void swap(int[] arr,int i,int j) {
        int temp=arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
   
   
   
   
   
    }
}
